:root {
    /*font-family: Inter, Avenir, Helvetica, Arial, sans-serif;*/

    font-family: "Poppins";
    color: rgba(255, 255, 255, 0.87);

    font-synthesis: none;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -webkit-text-size-adjust: 100%;

    --topNavHeight: 7.75rem;
    --topNavHeightStickied: 4rem;

    --backgroundColor: #121212;

    --max-width: 1600px;

    --lineColor: #333;
    --radialColor: rgb(62, 25, 131);
}

@media only screen and (max-width: 1150px),
            screen and (max-height: 800px){
    :root {
        font-size: min(2.5vmin, 0.85rem);
    }
}


* {
    overflow: clip;
}

#root {
    width: 100%;
    height: 100%;
    box-sizing: border-box;
    overflow-y: auto;
    overflow-x: hidden;
    padding: 0;
}

a:hover {
    color: #535bf2;
}

a {
    font-weight: 500;
    color: #646cff;
    text-decoration: inherit;
}

body {
    margin: 0;
    width: 100vw;
    height: 100vh;
    background: var(--backgroundColor);
}

h1 {
    font-size: 3.2em;
    line-height: 1.1;
}

.hr {
    background: var(--backgroundColor);
    width: 100%;
    height: 2rem;
}

.hr:after {
    display: block;
    content: "";
    width: 100%;
    height: 1px;
    background: var(--lineColor);
}

.fillSpace {
    width: 100%;
    height: 100%;
}


.fillViewport {
    width: 100vw;
    height: 100vh;
}

.vCarousell {
    overflow-y: auto;
    scroll-snap-type: y mandatory;
}

.vCarousell > * {
    scroll-snap-align: start;
}

.centerItems {
    display: flex;
    justify-content: center;
    align-items: center;
}

section {
    background: var(--backgroundColor);

}

.topShadow {
    filter: drop-shadow(0 -0.125rem 3rem rgba(0, 0, 0, 80%));
}


::-webkit-scrollbar {
    width: 0.375rem;
}

::-webkit-scrollbar-track {
    background: var(--backgroundColor);
}

::-webkit-scrollbar-thumb {
    background: #fff;
    border-radius: 1rem;
}

::-webkit-scrollbar-thumb:hover {
    background: #aaa;
}

/*A wrapper so that we can center things and set max width so that things that are aligned to left or right are not too far apart*/
.content-maxwidth-center-wrapper {
    display: flex;
    width: min(var(--max-width), 100%);
    height: 100%;
    align-items: inherit;
    justify-content: inherit;
    margin-left: auto;
    margin-right: auto;

}

.flex-col {
    display: flex;
    flex-direction: column;
}

a {
    font-weight: 600;
    color: gainsboro;
    transition: all ease 100ms;
    cursor: pointer;
}


a:hover {
    color: white;
}

.link-underline::after {
    position: absolute;
    content: "";
    width: 0;
    bottom: calc(var(--underlineWidth) + var(--link-padding));
    height: var(--underlineWidth);
    background: #ad4cde;
    left: auto;
    right: var(--link-padding);
    transition: width ease 300ms;
    animation: link-underline-enter ease 500ms;
    z-index: -1;
    border-radius: 3px;

}

.link-underline {
    --link-padding: 0.5em;
    --underlineWidth: max(min(3px,0.3em),2px);
    display: inline-block;
    position: relative;
    padding: var(--link-padding);
    height: calc(1.5em + (2 * var(--underlineWidth)));
    z-index: 1;
}

.link-underline:hover::after, .link-underline:focus::after {
    --w: 100%;
    left: var(--link-padding);
    right: auto;
    width: calc(var(--w) - 2*var(--link-padding));
    animation: none;
}

@keyframes link-underline-enter {
    from {
        --w: 100%;
    }
    to {
        --w: 0;
    }
}

.child-wrapper {
    height: fit-content;
    width: fit-content;
    margin: 0;
    padding: 0;
    background: transparent;
}

.disable-pointer-evs {
    pointer-events: none;
}

.transparent {
    opacity: 0;
}

hr {
    width: 100%;
    border-color: var(--lineColor);
    background: var(--lineColor);
    border-style: solid;
    border-width: 1px;

}

li {
    height: 100%;
    display: flex;
}

